/*
 * This file is generated by jOOQ.
 */
package io.github.rogerfilipes.infrastructure.repository.jooq.tables.records;


import io.github.rogerfilipes.infrastructure.repository.jooq.tables.Comments;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentsRecord extends UpdatableRecordImpl<CommentsRecord> implements Record6<Integer, String, UUID, UUID, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.comments.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.comments.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.comments.body</code>.
     */
    public void setBody(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.comments.body</code>.
     */
    public String getBody() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.comments.article</code>.
     */
    public void setArticle(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.comments.article</code>.
     */
    public UUID getArticle() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.comments.author</code>.
     */
    public void setAuthor(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.comments.author</code>.
     */
    public UUID getAuthor() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.comments.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.comments.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.comments.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.comments.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, UUID, UUID, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, UUID, UUID, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Comments.COMMENTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Comments.COMMENTS.BODY;
    }

    @Override
    public Field<UUID> field3() {
        return Comments.COMMENTS.ARTICLE;
    }

    @Override
    public Field<UUID> field4() {
        return Comments.COMMENTS.AUTHOR;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Comments.COMMENTS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Comments.COMMENTS.UPDATED_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getBody();
    }

    @Override
    public UUID component3() {
        return getArticle();
    }

    @Override
    public UUID component4() {
        return getAuthor();
    }

    @Override
    public LocalDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdatedAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getBody();
    }

    @Override
    public UUID value3() {
        return getArticle();
    }

    @Override
    public UUID value4() {
        return getAuthor();
    }

    @Override
    public LocalDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdatedAt();
    }

    @Override
    public CommentsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CommentsRecord value2(String value) {
        setBody(value);
        return this;
    }

    @Override
    public CommentsRecord value3(UUID value) {
        setArticle(value);
        return this;
    }

    @Override
    public CommentsRecord value4(UUID value) {
        setAuthor(value);
        return this;
    }

    @Override
    public CommentsRecord value5(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public CommentsRecord value6(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public CommentsRecord values(Integer value1, String value2, UUID value3, UUID value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentsRecord
     */
    public CommentsRecord() {
        super(Comments.COMMENTS);
    }

    /**
     * Create a detached, initialised CommentsRecord
     */
    public CommentsRecord(Integer id, String body, UUID article, UUID author, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Comments.COMMENTS);

        setId(id);
        setBody(body);
        setArticle(article);
        setAuthor(author);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
